{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","visibleImagesWidth","newTranslateValue","extremeTranslatePoint","length","useState","currentValue","setCurrentValue","className","cn","type","onClick","prevPos","style","width","gap","map","image","index","transform","transition","src","alt","App","state","handleChange","event","target","name","value","checked","setState","prevState","this","htmlFor","id","min","max","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20b36a64.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\nimport cn from 'classnames';\n\ntype CarouselProps = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<CarouselProps> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const gap = 20;\n  const visibleImagesWidth = itemWidth * frameSize + (frameSize - 1) * gap;\n  const newTranslateValue = step * (itemWidth + gap);\n  const extremeTranslatePoint\n  = -(itemWidth + gap) * (images.length - frameSize);\n\n  const [currentValue, setCurrentValue] = useState(0);\n\n  if (extremeTranslatePoint > currentValue) {\n    setCurrentValue(extremeTranslatePoint);\n  }\n\n  const handlePrev = () => {\n    setCurrentValue((prevPos) => (prevPos + newTranslateValue\n      >= 0 ? 0 : prevPos + newTranslateValue));\n\n    if (infinite && currentValue === 0) {\n      setCurrentValue(extremeTranslatePoint);\n    }\n  };\n\n  const handleNext = () => {\n    setCurrentValue((prevPos) => (\n      prevPos - newTranslateValue <= extremeTranslatePoint\n        ? extremeTranslatePoint\n        : prevPos - newTranslateValue));\n\n    if (infinite && currentValue === extremeTranslatePoint) {\n      setCurrentValue(0);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__container\">\n        <button\n          className={cn('button-prev', {\n            'button-prev__disabled': !infinite && currentValue === 0,\n          })}\n          type=\"button\"\n          onClick={handlePrev}\n        >\n          <div className=\"button-prev__text\">&lt;</div>\n        </button>\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${visibleImagesWidth}px`,\n            gap: `${gap}px`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li\n              className=\"Carousel__item\"\n              key={image}\n              style={{\n                transform: `translateX(${currentValue}px)`,\n                transition: `transform ${animationDuration}ms ease`,\n              }}\n            >\n              <img src={image} alt={`${index + 1}`} width={itemWidth} />\n            </li>\n          ))}\n        </ul>\n        <button\n          className={cn('button-next', {\n            'button-next__disabled': !infinite\n            && currentValue === extremeTranslatePoint,\n          })}\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={handleNext}\n        >\n          <div className=\"button-next__text\">&gt;</div>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ntype State = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name, value, checked, type,\n    } = event.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: type === 'checkbox' ? checked : +value,\n    }));\n  };\n\n  render() {\n    const {\n      images, step, frameSize, itemWidth, animationDuration, infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n        <div className=\"input-container\">\n          <div className=\"input-container__item\">\n            <label htmlFor=\"itemId\">item - width </label>\n            <input\n              name=\"itemWidth\"\n              id=\"itemId\"\n              type=\"number\"\n              min=\"100\"\n              max=\"220\"\n              onChange={this.handleChange}\n              value={itemWidth}\n            />\n          </div>\n          <div className=\"input-container__item\">\n            <label htmlFor=\"frameId\">frame-size</label>\n            <input\n              name=\"frameSize\"\n              id=\"frameId\"\n              type=\"number\"\n              min=\"1\"\n              max=\"10\"\n              onChange={this.handleChange}\n              value={frameSize}\n            />\n          </div>\n          <div className=\"input-container__item\">\n            <label htmlFor=\"stepId\">step</label>\n            <input\n              name=\"step\"\n              id=\"stepId\"\n              type=\"number\"\n              min=\"1\"\n              max=\"5\"\n              onChange={this.handleChange}\n              value={step}\n            />\n          </div>\n          <div className=\"input-container__item\">\n            <label htmlFor=\"animationDurationId\">animation-duration</label>\n            <input\n              name=\"animationDuration\"\n              id=\"animationDurationId\"\n              type=\"number\"\n              min=\"100\"\n              max=\"5000\"\n              step=\"100\"\n              onChange={this.handleChange}\n              value={animationDuration}\n            />\n          </div>\n          <div className=\"input-container__item\">\n            <label htmlFor=\"infiniteId\">Infinite</label>\n            <input\n              name=\"infinite\"\n              id=\"infiniteId\"\n              type=\"checkbox\"\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}